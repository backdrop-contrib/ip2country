<?php

/**
 * @file
 * Tests suite for the ip2country module.
 *
 * @author Tim Rohaly.    <http://drupal.org/user/202830>
 */


/**
 * 1 class for unit tests, 1 class for functional tests
 * 1 class for DB update tests because they take so long
 */
class ip2countryTestCase extends DrupalWebTestCase {

  /**
   * Implements of getInfo().
   */
  public static function getInfo() {
    return array(
      'name'        => t('IP/Country lookup '),
      'description' => t('Test operations of IP to Country module.'),
      'group'       => t('IP to Country'),
    );
  }


  /**
   * Implements of setUp().
   */
  function setUp() {
    // Turn off automatic DB download when module is installed.
    variable_set('ip2country_populate_database_on_install', FALSE);

    parent::setUp('ip2country');

    // Create and log in our test user.
    $admin_user = $this->drupalCreateUser(array('administer ip2country'));
    $this->drupalLogin($admin_user);
  }


  /**
   * Tests IP lookup for IP in DB
   * Tests IP lookup for IP NOT in DB
   */
  function testIPLookup() {
  }

  /**
   * Tests injecting IP data via hook_ip2country_alter()
   */
  function testAlterHook() {
  }

  /**
   * Tests Default country
   */
  function testDefaultCountry() {
  }

  /**
   * Tests anonymous vs authenticated users
   */
  function testUserAccess() {
  }

  /**
   * Tests $user object for proper value
   */
  function testUserObject() {
  }

  /**
   * Tests UI
   */
  function testUI() {
  }

  /**
   * Tests IP Spoofing
   * -- anonymous vs authenticated users
   * Check for info $messages
   */
  function testIPSpoofing() {
  }

  /**
   * Tests Country Spoofing
   * -- anonymous vs authenticated users
   * Check for info $messages
   */
  function testCountrySpoofing() {
  }

  /**
   * Tests manual lookup
   */
  function testIPManualLookup() {
    //$this->clickLink(t('Lookup'));
  }

  /**
   * Tests DB download
   */
  function testDBDownload() {
  }

  /**
   * Tests manual DB update.
   */
  function testDBManualUpdate() {
    //$this->clickLink(t('Update'));
    $rows = db_select('ip2country')->countQuery()->execute()->fetchField();
    //$this->assertText(t('The IP to Country database has been updated from @rir. @rows rows affected.', array('@rir' => $rir, '@rows' => $rows)), t('Database was updated manually.'));

  }

  /**
   * Tests cron DB update.
   */
  function testDBCronUpdate() {
  }

  /**
   * Tests logging of DB updates.
   */
  function testDBUpdateLogging() {
    // Turn off logging

    // Turn on logging
    $edit = array(
      'ip2country_watchdog' => array( 'test' => TRUE),
    );
    //$this->drupalPost('admin/store/settings/countries/edit', $edit, t('Import'));
    //$this->assertText(t('Database updated from @rir server.', array('@rir' => $rir), t('Watchdog reported database update.'));
  }

  /**
   * Implements of tearDown().
   */
  function tearDown() {
    // Perform any clean-up tasks.
    variable_del('ip2country_populate_database_on_install');

    // Finally...
    parent::tearDown();
  }

}
/*
    $import_file = 'belgium_56_3.cif';
    $country_name = 'Belgium';
    $country_code = 'BEL';

    $this->drupalGet('admin/store/settings/countries/edit');
    $this->assertRaw('<option value="' . $import_file . '">' . $import_file . '</option>', t('Ensure country file is not imported yet.'));

    $edit = array(
      'import_file[]' => array($import_file => $import_file),
    );
    $this->drupalPost('admin/store/settings/countries/edit', $edit, t('Import'));
    $this->assertText(t('Country file @file imported.', array('@file' => $import_file)), t('Country was imported successfully.'));
    $this->assertText($country_code, t('Country appears in the imported countries table.'));
    $this->assertNoRaw('<option value="' . $import_file . '">' . $import_file . '</option>', t('Country does not appear in list of files to be imported.'));

    $this->clickLink(t('disable'));
    $this->assertText(t('@name disabled.', array('@name' => $country_name)), t('Country was disabled.'));

    $this->clickLink(t('enable'));
    $this->assertText(t('@name enabled.', array('@name' => $country_name)), t('Country was enabled.'));

    $this->clickLink(t('remove'));
    $this->assertText(t('Are you sure you want to remove @name from the system?', array('@name' => $country_name)), t('Confirm form is displayed.'));

    $this->drupalPost('admin/store/settings/countries/56/remove', array(), t('Remove'));
    $this->assertText(t('@name removed.', array('@name' => $country_name)), t('Country removed.'));
    $this->assertRaw('<option value="' . $import_file . '">' . $import_file . '</option>', t('Ensure country file is not imported yet.'));
    $this->assertNoText($country_code, t('Country does not appear in imported countries table.'));
  }
*/
